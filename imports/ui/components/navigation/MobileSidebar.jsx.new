import React, { useRef, useEffect, useContext } from 'react';
import { Icons } from '../Icons';
import { Link } from 'react-router-dom';
import { NavigationContext } from '../../context/NavigationContext';

export const MobileSidebar = () => {
  const { navigationItems, activeTab, setActiveTab, isMenuOpen, closeMenu, user } = useContext(NavigationContext);
  const sidebarRef = useRef(null);

  useEffect(() => {
    const handleEscape = (event) => {
      if (event.key === 'Escape') {
        closeMenu();
      }
    };

    if (isMenuOpen) {
      document.addEventListener('keydown', handleEscape);
      document.body.style.overflow = 'hidden';
    }

    return () => {
      document.removeEventListener('keydown', handleEscape);
      document.body.style.overflow = 'unset';
    };
  }, [isMenuOpen, closeMenu]);

  if (!isMenuOpen) return null;

  // Filter admin-only items for sidebar
  const sidebarItems = navigationItems.filter(item => 
    ['clients', 'team', 'analytics'].includes(item.id)
  );

  const handleItemClick = (itemId) => {
    setActiveTab(itemId);
    closeMenu();
  };

  return (
    <div className="sidebar-backdrop animate-fade-in">
      {/* Backdrop */}
      <div className="backdrop-overlay" onClick={closeMenu} />
      
      {/* Sidebar */}
      <div className="sidebar-container animate-slide-in-left" ref={sidebarRef}>
        <div className="sidebar-header">
          <div className="sidebar-logo">Posty</div>
          <button className="sidebar-close" onClick={closeMenu} aria-label="Close menu">
            <Icons.x />
          </button>
        </div>
        
        {/* User Info */}
        <div className="sidebar-user">
          <div className="sidebar-avatar">
            {user.avatar ? (
              <img src={user.avatar} alt={user.name} className="avatar-image" />
            ) : (
              <span>{user.name.split(' ').map(n => n[0]).join('')}</span>
            )}
          </div>
          <div className="sidebar-user-info">
            <h3 className="sidebar-user-name">{user.name}</h3>
            <p className="sidebar-user-role">{user.role}</p>
          </div>
        </div>

        {/* Navigation Items */}
        <div className="sidebar-nav-items">
          {navigationItems.map((item) => {
            const Icon = Icons[item.icon];
            const isActive = activeTab === item.id;
            
            return (
              <Link
                key={item.id}
                to={item.path}
                className={`sidebar-nav-item ${isActive ? 'sidebar-nav-item-active' : ''}`}
                onClick={() => handleItemClick(item.id)}
              >
                <Icon className="sidebar-nav-icon" />
                <span className="sidebar-nav-label">{item.label}</span>
              </Link>
            );
          })}
        </div>
        
        {/* Footer */}
        <div className="sidebar-footer">
          <Link to="/settings" className="sidebar-nav-item" onClick={closeMenu}>
            <Icons.settings className="sidebar-nav-icon" />
            <span className="sidebar-nav-label">Settings</span>
          </Link>
          
          <Link to="/help" className="sidebar-nav-item" onClick={closeMenu}>
            <Icons.help className="sidebar-nav-icon" />
            <span className="sidebar-nav-label">Help & Support</span>
          </Link>
          
          <button className="sidebar-nav-item">
            <Icons.logout className="sidebar-nav-icon" />
            <span className="sidebar-nav-label">Sign Out</span>
          </button>
        </div>
      </div>
    </div>
  );
};
